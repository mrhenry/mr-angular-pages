{"version":3,"sources":["../src/Page.js"],"names":[],"mappings":"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","file":"Page.js","sourcesContent":["import {State, mountAt, Metadata, buildUiRouterState} from 'fd-angular-core';\n\nexport var registeredPageTypes = {};\n\nconst DEFAULT_SUFFIX = 'Page';\n\nexport function mountPage(page, url, opts={}) {\n\tlet {name} = opts;\n\n\treturn {\n\t\tstate:              this::mountAt(url, { name: (name || url) }),\n\t\tpage:               page,\n\t\tchildren:           [],\n\t\tbuildUiRouterState: builder,\n\t};\n\n\tfunction builder(options) {\n\t\tlet state = buildUiRouterState(this.state, options);\n\n\t\tstate.absoluteName = true;\n\t\tstate.resolve.pageSummary = () => { return this.page; };\n\t\tstate.resolve.pageId = () => { return this.page.id; };\n\n\t\tfor (let child of this.children) {\n\t\t\tstate.children.push(buildUiRouterState(child));\n\t\t}\n\n\t\treturn state;\n\t}\n}\n\n/**\n@function Page\n@param {Object}  opts - The options\n@param {string}  [opts.name] - The name of the controller.\n@param {string}  [opts.bindTo] - Bind the controller to the provided name.\n@param {Boolean} [opts.abstract] - True for abstract states.\n@param {Boolean} [opts.embed] - Embed this page as a child state in it's parent page.\n@param {Boolean} [opts.embedChildren] - Embed the child pages of this pages as child states.\n@param {string}  [opts.template] - An angular template.\n@param {string}  [opts.templateUrl] - A URL to an angular template.\n@param {State[]} [opts.children] - List of child states.\n@param {string}  [opts.controllerName] - The name of the controller as seen by angular.\n@param {Object}  [opts.views] - State views\n\n@example\n[@]Page({\n\ttemplate: `<h1>Hello World</h1>`,\n})\nclass HomePage {\n}\n*/\nexport function Page(opts={}) {\n\tif (opts.url) { throw \"@Page({ url }) is not supported\"; }\n\tif (opts.resolve) { throw \"@Page({ resolve }) is not supported\"; }\n\n\tif (opts.asChild !== undefined) {\n\t\tconsole.warn(\"@Page({ asChild }) is depricated use @Page({ embed }) instead.\");\n\t\topts.embed = opts.asChild;\n\t}\n\n\tfunction register(constructor) {\n\t\tlet meta = Metadata(constructor);\n\n\t\tlet name = opts.name;\n\t\tif (!name) {\n\t\t\tname = meta.name;\n\t\t\tname = name[0].toLowerCase() + name.substr(1, name.length - DEFAULT_SUFFIX.length - 1);\n\t\t\topts.name = name;\n\t\t}\n\n\t\tconstructor = State(opts)(constructor) || constructor;\n\n\t\tvar pageConstructor = function pageConstructor(pageSummary, pageDetails, ...rest) {\n\t\t\tthis::applyPageSummary(pageSummary);\n\t\t\tthis::applyPageDetails(pageDetails);\n\t\t\tconstructor.apply(this, rest);\n\t\t};\n\t\tpageConstructor = meta.wrap(pageConstructor);\n\t\tpageConstructor.$inject = ['pageSummary', 'pageDetails'].concat(constructor.$inject || []);\n\n\t\tlet superMeta = Metadata(meta.superClass) || { state: {} };\n\n\t\tif (opts.embed === true || opts.embed === false) {\n\t\t\tmeta.state.embed = opts.embed;\n\t\t} else {\n\t\t\tmeta.state.embed = (superMeta.state.embed || false);\n\t\t}\n\n\t\tif (opts.embedChildren === true || opts.embedChildren === false) {\n\t\t\tmeta.state.embedChildren = opts.embedChildren;\n\t\t} else {\n\t\t\tmeta.state.embedChildren = (superMeta.state.embedChildren || false);\n\t\t}\n\n\t\tmeta.state.resolve.pageDetails = loadPageDetails;\n\t\tmeta.state.resolve.pageSummary = () => {};\n\t\tmeta.state.resolve.pageId = () => {};\n\n\t\tregisteredPageTypes[meta.name] = pageConstructor;\n\t\treturn constructor;\n\t}\n\n\tfunction loadPageDetails($http, pageId) {\n\t\treturn $http.get(`/api/pages/${pageId}.json`).then(x => x.data);\n\t}\n\tloadPageDetails.$inject = ['$http', 'pageId'];\n\n\tfunction applyPageSummary(data) {\n\t\tthis.$pageSummary = data;\n\t\tObject.assign(this, data);\n\t\tthis.type = data.type;\n\t}\n\n\tfunction applyPageDetails(data) {\n\t\tthis.$pageDetails = data;\n\t\tObject.assign(this, data);\n\t}\n\n\treturn register;\n}\n"]}