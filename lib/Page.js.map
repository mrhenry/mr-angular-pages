{"version":3,"sources":["../src/Page.js"],"names":[],"mappings":"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","file":"Page.js","sourcesContent":["import {State, mountAt} from 'fd-angular-core';\n\nexport var registeredPageTypes = {};\n\nconst DEFAULT_SUFFIX = 'Page';\n\nexport function mountPage(pageId, url) {\n  let _this = this::mountAt(url);\n\n  let resolve = Object.assign({}, _this.$$state.state.resolve);\n  _this.$$state.state.resolve = resolve;\n  _this.$$state.state.name = url;\n  _this.$$state.state.childStates = _this.$$state.state.childStates.concat([]);\n\n  resolve.pageId = function resolvePageId() { return pageId; };\n\n  return _this;\n}\n\nexport function Page(opts) {\n  if (opts.url) { throw \"@Page({ url }) is not supported\"; }\n  if (opts.abstract) { throw \"@Page({ abstract }) is not supported\"; }\n  if (opts.resolve) { throw \"@Page({ resolve }) is not supported\"; }\n\n  function register(constructor) {\n\n    let name = opts.name;\n    if (!name) {\n      name = funcName(constructor);\n      name = name[0].toLowerCase() + name.substr(1, name.length - DEFAULT_SUFFIX.length - 1);\n      opts.name = name;\n    }\n\n    function wrappedConstructor(pageDetails, ...rest) {\n      this::applyPageDetails(pageDetails);\n      constructor.apply(this, rest);\n    }\n    wrappedConstructor = funcRename(funcName(constructor), wrappedConstructor);\n    wrappedConstructor.$inject = ['pageDetails'].concat(constructor.$inject || []);\n    wrappedConstructor.prototype = constructor.prototype;\n\n    opts.resolve = { pageDetails: loadPageDetails };\n\n    State(opts)(wrappedConstructor);\n    registeredPageTypes[funcName(wrappedConstructor)] = wrappedConstructor;\n  }\n\n  function loadPageDetails($http, pageId) {\n    return $http.get(`/api/pages/${pageId}.json`).then(x => x.data);\n  }\n  loadPageDetails.$inject = ['$http', 'pageId']\n\n  function applyPageDetails(data) {\n    for (let key of Object.keys(data)) {\n      this[key] = data[key];\n    }\n  }\n\n  return register;\n}\n\nfunction funcName(f) {\n  let name = ((f && f.name) || null);\n\n  if (name === null) {\n    name = f.toString().match(/^function\\s*([^\\s(]+)/)[1];\n  }\n\n  return name;\n}\n\nfunction funcRename(name, fn) {\n    return (new Function(\"return function (call) { return function \" + name +\n        \" () { return call(this, arguments) }; };\")())(Function.apply.bind(fn));\n}\n"]}