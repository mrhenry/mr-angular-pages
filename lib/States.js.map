{"version":3,"sources":["../src/States.js"],"names":[],"mappings":";;;;;;;;;;mBAA6B,OAAO;;oBACS,QAAQ;;6BACrB,iBAAiB;;AAEjD,mBAFQ,UAAU,EAEP,WAAW,EAAE,CAAC,CAAC;;AAE1B,IAAI,MAAM,GAAG,EAAE,CAAC;;IAOH,eAAe;AAEd,WAFD,eAAe,GAEX;;;AACb,WAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAC;GACjD;;yBAJU,eAAe;;;;WAMjB,oBAAG;AACV,aAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;KACpD;;;WAEM,kBAAG;AACR,aAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;KAC5C;;;WAEM,kBAAG;AACR,aAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;KAC5C;;;AAhBU,iBAAe,GAL3B,mBANmB,KAAK,EAMlB;AACL,YAAQ,EAAE,IAAI;AACd,YAAQ,EAAE,MAAM;AAChB,YAAQ,uBAAuB;GAChC,CAAC,CACW,eAAe,KAAf,eAAe;SAAf,eAAe;;;QAAf,eAAe,GAAf,eAAe;;AAoB5B,SAAS,WAAW,GAAG;AACrB,SAAO,SAlCD,cAAc,GAkCG,CACpB,IAAI,CAAC,WAAW,CAAC,CAAC;CACtB;;AAED,SAAS,WAAW,CAAC,IAAI,EAAE;AACzB,MAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnC,MAAI,CAAC,IAAI,EAAE,CAAC;;;;;;;AAEZ,yBAAiB,IAAI,8HAAE;UAAd,IAAI;;AACX,UAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC5B,UAAI,IAAI,GAAG,AAAM,cAAc,MAApB,IAAI,EAAiB,IAAI,CAAC,IAAI,CAAC,CAAC;;AAE3C,UAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE;AAC7B,YAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;;AAEhC,YAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACpC,YAAI,SAAS,GAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;AAEjC,YAAI,KAAK,GAAG,MAnDW,SAAS,MAmDpB,IAAI,EAAY,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;;AAEhD,YAAI,OAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AACpC,eAAM,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;OAE9C,MAAM;AACL,YAAI,KAAK,GAAG,MAzDW,SAAS,MAyDpB,IAAI,EAAY,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;AAC3C,cAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;OACpB;KAEF;;;;;;;;;;;;;;;CACF;;AAED,SAAS,cAAc,CAAC,IAAI,EAAE;AAC5B,MAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,SAAO,IAAI,EAAE;AACX,QAAI,IAAI,GAAG,MApEP,mBAAmB,CAoEQ,IAAI,CAAC,CAAC;AACrC,QAAI,IAAI,EAAE,OAAO,IAAI,CAAC;;AAEtB,WAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEnB,QAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACxB,QAAI,CAAC,IAAI,EAAE;AACT,YAAM,KAAK,CAAC,sBAAsB,GAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACxD;GACF;CACF","file":"States.js","sourcesContent":["import {fetchSummaries} from './Api';\nimport {registeredPageTypes, mountPage} from './Page';\nimport {beforeBoot, State} from 'fd-angular-core';\n\nbeforeBoot(awaitStates());\n\nlet states = [];\n\n@State({\n  abstract: true,\n  children: states,\n  template: `<ui-view></ui-view>`\n})\nexport class PagesController {\n\n  constructor () {\n    console.log('[PagesController]', 'Constructor');\n  }\n\n  activate () {\n    console.log('[PagesController]', 'Activate', true);\n  }\n\n  attach () {\n    console.log('[PagesController]', 'Attach');\n  }\n\n  detach () {\n    console.log('[PagesController]', 'Detach');\n  }\n\n}\n\nfunction awaitStates() {\n  return fetchSummaries()\n    .then(buildStates);\n}\n\nfunction buildStates(data) {\n  let keys = Object.keys(data.pages);\n  keys.sort();\n\n  for (let path of keys) {\n    let page = data.pages[path];\n    let type = data::lookupPageType(page.type);\n\n    if (type.$$state.opts.asChild) {\n      let idx = path.lastIndexOf('/');\n\n      let parentPath = path.slice(0, idx);\n      let childPath  = path.slice(idx);\n\n      let state = type::mountPage(page.id, childPath);\n\n      let parent = data.pages[parentPath];\n      parent.$$state.state.childStates.push(state);\n\n    } else {\n      let state = type::mountPage(page.id, path);\n      states.push(state);\n    }\n\n  }\n}\n\nfunction lookupPageType(name) {\n  let missing = [];\n\n  while (true) {\n    let type = registeredPageTypes[name];\n    if (type) return type;\n\n    missing.push(name);\n\n    name = this.types[name];\n    if (!name) {\n      throw Error(\"Unknown page types: \"+missing.join(', '));\n    }\n  }\n}\n"]}