{"version":3,"sources":["../src/States.js"],"names":[],"mappings":";;;;;;;;;;mBAA6B,OAAO;;oBACS,QAAQ;;6BACrB,iBAAiB;;AAEjD,mBAFQ,UAAU,EAEP,WAAW,EAAE,CAAC,CAAC;;AAE1B,IAAI,MAAM,GAAG,EAAE,CAAC;;IAOH,eAAe;AAEd,WAFD,eAAe,GAEX;;;AACb,WAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAC;GACjD;;yBAJU,eAAe;;;;WAMjB,oBAAG;AACV,aAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;KACpD;;;WAEM,kBAAG;AACR,aAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;KAC5C;;;WAEM,kBAAG;AACR,aAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;KAC5C;;;AAhBU,iBAAe,GAL3B,mBANmB,KAAK,EAMlB;AACL,YAAQ,EAAE,IAAI;AACd,YAAQ,EAAE,MAAM;AAChB,YAAQ,uBAAuB;GAChC,CAAC,CACW,eAAe,KAAf,eAAe;SAAf,eAAe;;;QAAf,eAAe,GAAf,eAAe;;AAoB5B,SAAS,WAAW,GAAG;AACrB,SAAO,SAlCD,cAAc,GAkCG,CACpB,IAAI,CAAC,WAAW,CAAC,CAAC;CACtB;;AAED,SAAS,WAAW,CAAC,IAAI,EAAE;;;;;;AACzB,yBAAiB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,8HAAE;UAAjC,IAAI;;AACX,UAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC5B,UAAI,IAAI,GAAG,AAAM,cAAc,MAApB,IAAI,EAAiB,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3C,UAAI,KAAK,GAAG,MAzCa,SAAS,MAyCtB,IAAI,EAAY,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;AAC3C,YAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACpB;;;;;;;;;;;;;;;CACF;;AAED,SAAS,cAAc,CAAC,IAAI,EAAE;AAC5B,MAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,SAAO,IAAI,EAAE;AACX,QAAI,IAAI,GAAG,MAlDP,mBAAmB,CAkDQ,IAAI,CAAC,CAAC;AACrC,QAAI,IAAI,EAAE,OAAO,IAAI,CAAC;;AAEtB,WAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEnB,QAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACxB,QAAI,CAAC,IAAI,EAAE;AACT,YAAM,KAAK,CAAC,sBAAsB,GAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACxD;GACF;CACF","file":"States.js","sourcesContent":["import {fetchSummaries} from './Api';\nimport {registeredPageTypes, mountPage} from './Page';\nimport {beforeBoot, State} from 'fd-angular-core';\n\nbeforeBoot(awaitStates());\n\nlet states = [];\n\n@State({\n  abstract: true,\n  children: states,\n  template: `<ui-view></ui-view>`\n})\nexport class PagesController {\n\n  constructor () {\n    console.log('[PagesController]', 'Constructor');\n  }\n\n  activate () {\n    console.log('[PagesController]', 'Activate', true);\n  }\n\n  attach () {\n    console.log('[PagesController]', 'Attach');\n  }\n\n  detach () {\n    console.log('[PagesController]', 'Detach');\n  }\n\n}\n\nfunction awaitStates() {\n  return fetchSummaries()\n    .then(buildStates);\n}\n\nfunction buildStates(data) {\n  for (let path of Object.keys(data.pages)) {\n    let page = data.pages[path];\n    let type = data::lookupPageType(page.type);\n    let state = type::mountPage(page.id, path);\n    states.push(state);\n  }\n}\n\nfunction lookupPageType(name) {\n  let missing = [];\n\n  while (true) {\n    let type = registeredPageTypes[name];\n    if (type) return type;\n\n    missing.push(name);\n\n    name = this.types[name];\n    if (!name) {\n      throw Error(\"Unknown page types: \"+missing.join(', '));\n    }\n  }\n}\n"]}