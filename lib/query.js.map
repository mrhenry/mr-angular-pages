{"version":3,"sources":["../src/query.js"],"names":[],"mappings":";;;;;;;;;;QAKgB,KAAK,GAAL,KAAK;QAkCL,IAAI,GAAJ,IAAI;QA4BJ,SAAS,GAAT,SAAS;;AA9DlB,SAAS,KAAK,CAAC,IAAI,EAAE;;;AAC3B,KAAI,CAAC,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACxC,MAAI;AACH,UAAO,CAAC,IAAI,OAAM,CAAC,CAAC;GACpB,CAAC,OAAO,CAAC,EAAE;AACX,SAAM,CAAC,CAAC,CAAC,CAAC;GACV;EACD,CAAC,CAAC;;AAEH,EAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC,EAAI;AACf,MAAI,CAAC,KAAK,KAAK,EAAE;AAChB,UAAO,CAAC,CAAC;GACT;AACD,MAAI,CAAC,MAAK,QAAQ,EAAE;AACnB,UAAO,CAAC,CAAC;GACT;;AAED,MAAI,GAAG,GAAG,EAAE,CAAC;;;;;;;AAEb,wBAAkB,MAAK,QAAQ,8HAAE;QAAxB,KAAK;;AACb,OAAG,CAAC,IAAI,CAAC,AAAO,KAAK,MAAZ,KAAK,EAAQ,IAAI,CAAC,CAAC,CAAC;IAC7B;;;;;;;;;;;;;;;;AAED,SAAO,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACxB,CAAC,CAAC;;AAEH,QAAO,CAAC,CAAC,IAAI,CAAC;;EAAU,CAAC,CAAC;CAC1B;;;;;;;;AAOM,SAAS,IAAI,CAAC,KAAK,EAAU;KAAR,GAAG,gCAAC,EAAE;;AAEjC,KAAI,IAAI,CAAC,YAAY,EAAE;;;AACtB,SAAO,YAAA,IAAI,CAAC,YAAY,EAAE,IAAI,iBAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAC3C;;AAED,KAAI,CAAC,KAAK,EAAE;AACX,SAAO,GAAG,CAAC;EACX;;AAED,KAAI,KAAK,CAAC,KAAK,IAAI,GAAG,CAAC,MAAM,IAAI,KAAK,CAAC,KAAK,EAAE;AAC7C,SAAO,GAAG,CAAC;EACX;;AAED,KAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;AAC3C,SAAO,AAAM,cAAc,MAApB,IAAI,EAAiB,KAAK,EAAE,GAAG,CAAC,CAAC;EACxC;;AAED,IAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACf,QAAO,AAAM,cAAc,MAApB,IAAI,EAAiB,KAAK,EAAE,GAAG,CAAC,CAAC;CAExC;;;;;;;AAOM,SAAS,SAAS,CAAC,KAAK,EAAE;;AAEhC,KAAI,CAAC,KAAK,EAAE;AACX,SAAO,IAAI,CAAC;EACZ;;AAED,MAAK,CAAC,KAAK,GAAG,CAAC,CAAC;AAChB,KAAI,GAAG,GAAG,AAAM,IAAI,MAAV,IAAI,EAAO,KAAK,CAAC,CAAC;;AAE5B,QAAQ,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAE;CACxB;;AAGD,SAAS,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE;AACnC,KAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACnB,SAAO,GAAG,CAAC;EACX;;;;;;;AAED,wBAAkB,IAAI,CAAC,QAAQ,mIAAE;OAAxB,KAAK;;AACb,MAAG,GAAG,AAAO,IAAI,MAAX,KAAK,EAAO,KAAK,EAAE,GAAG,CAAC,CAAC;GAC9B;;;;;;;;;;;;;;;;AAED,QAAO,GAAG,CAAC;CACX","file":"query.js","sourcesContent":["\n\n/**\n@param {Function} func - func is called with each page in the tree\n*/\nexport function visit(func) {\n\tlet p = new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\tresolve(func(this));\n\t\t} catch (e) {\n\t\t\treject(e);\n\t\t}\n\t});\n\n\tp = p.then(r => {\n\t\tif (r === false) {\n\t\t\treturn r;\n\t\t}\n\t\tif (!this.children) {\n\t\t\treturn r;\n\t\t}\n\n\t\tlet all = [];\n\n\t\tfor (let child of this.children) {\n\t\t\tall.push(child::visit(func));\n\t\t}\n\n\t\treturn Promise.all(all);\n\t});\n\n\treturn p.then(() => this);\n}\n\n/**\n * @param {Object} query\n * @param {Integer} query.limit\n * @param {String} query.type\n */\nexport function find(query, acc=[]) {\n\n\tif (this.$pageSummary) {\n\t\treturn this.$pageSummary::find(query, acc);\n\t}\n\n\tif (!query) {\n\t\treturn acc;\n\t}\n\n\tif (query.limit && acc.length >= query.limit) {\n\t\treturn acc;\n\t}\n\n\tif (query.type && query.type !== this.type) {\n\t\treturn this::findInChildren(query, acc);\n\t}\n\n\tacc.push(this);\n\treturn this::findInChildren(query, acc);\n\n}\n\n\n/**\n * @param {Object} query\n * @param {String} query.type\n */\nexport function findFirst(query) {\n\n\tif (!query) {\n\t\treturn null;\n\t}\n\n\tquery.limit = 1;\n\tlet res = this::find(query);\n\n\treturn (res[0] || null);\n}\n\n\nfunction findInChildren(query, acc) {\n\tif (!this.children) {\n\t\treturn acc;\n\t}\n\n\tfor (let child of this.children) {\n\t\tacc = child::find(query, acc);\n\t}\n\n\treturn acc;\n}\n"]}